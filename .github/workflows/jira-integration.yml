name: Jira Integration

on:
  pull_request:
    types: [opened, closed, reopened]
    branches: [main, develop, master]

jobs:
  update-jira:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Jira Ticket ID
        id: extract
        run: |
          # Extract branch name from PR
          BRANCH_NAME="${{ github.head_ref }}"
          echo "Branch: $BRANCH_NAME"

          # Extract ticket ID (e.g., KAN-123 from feature/KAN-123-description)
          TICKET_ID=$(echo "$BRANCH_NAME" | grep -oE 'KAN-[0-9]+' | head -1)

          if [ -z "$TICKET_ID" ]; then
            echo "No Jira ticket ID found in branch name"
            echo "ticket_id=" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Extracted Ticket ID: $TICKET_ID"
          echo "ticket_id=$TICKET_ID" >> $GITHUB_OUTPUT

      - name: Get Jira Transitions
        if: steps.extract.outputs.ticket_id != ''
        id: transitions
        run: |
          TICKET_ID="${{ steps.extract.outputs.ticket_id }}"

          # Get available transitions for the ticket
          RESPONSE=$(curl -s -X GET \
            -H "Authorization: Basic ${{ secrets.JIRA_AUTH }}" \
            -H "Accept: application/json" \
            "https://abdo-said.atlassian.net/rest/api/3/issue/$TICKET_ID/transitions")

          echo "Available transitions:"
          echo "$RESPONSE" | jq '.transitions[] | {id: .id, name: .name}'

          # Store transitions for later use
          echo "transitions=$RESPONSE" >> $GITHUB_OUTPUT

      - name: Update Jira Ticket Status
        if: steps.extract.outputs.ticket_id != ''
        run: |
          TICKET_ID="${{ steps.extract.outputs.ticket_id }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_STATE="${{ github.event.action }}"
          PR_MERGED="${{ github.event.pull_request.merged }}"

          # Determine target status based on PR action
          if [ "$PR_STATE" = "opened" ] || [ "$PR_STATE" = "reopened" ]; then
            TARGET_STATUSES=("In Review" "In PR" "Code Review" "Review")
            COMMENT="üîç Pull Request opened for review: $PR_URL"
          elif [ "$PR_STATE" = "closed" ] && [ "$PR_MERGED" = "true" ]; then
            TARGET_STATUSES=("QA" "Ready for QA" "Testing" "Done" "Resolved")
            COMMENT="‚úÖ Pull Request merged: $PR_URL"
          elif [ "$PR_STATE" = "closed" ] && [ "$PR_MERGED" = "false" ]; then
            TARGET_STATUSES=("To Do" "Backlog" "Open" "Reopened")
            COMMENT="‚ùå Pull Request closed without merging: $PR_URL"
          else
            echo "Unknown PR state: $PR_STATE"
            exit 0
          fi

          # Get transitions JSON
          TRANSITIONS='${{ steps.transitions.outputs.transitions }}'

          # Find matching transition ID
          TRANSITION_ID=""
          for status in "${TARGET_STATUSES[@]}"; do
            ID=$(echo "$TRANSITIONS" | jq -r ".transitions[] | select(.name==\"$status\") | .id")
            if [ ! -z "$ID" ] && [ "$ID" != "null" ]; then
              TRANSITION_ID=$ID
              echo "Found transition: $status (ID: $ID)"
              break
            fi
          done

          # Apply transition if found
          if [ ! -z "$TRANSITION_ID" ]; then
            echo "Transitioning to status ID: $TRANSITION_ID"

            # Update ticket status
            TRANSITION_RESPONSE=$(curl -s -X POST \
              -H "Authorization: Basic ${{ secrets.JIRA_AUTH }}" \
              -H "Content-Type: application/json" \
              "https://abdo-said.atlassian.net/rest/api/3/issue/$TICKET_ID/transitions" \
              -d "{\"transition\": {\"id\": \"$TRANSITION_ID\"}}")

            if [ $? -eq 0 ]; then
              echo "‚úÖ Successfully updated ticket status"
            else
              echo "‚ö†Ô∏è Failed to update ticket status"
              echo "$TRANSITION_RESPONSE"
            fi
          else
            echo "‚ö†Ô∏è No matching transition found for statuses: ${TARGET_STATUSES[*]}"
          fi

          # Add comment to Jira ticket
          COMMENT_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Basic ${{ secrets.JIRA_AUTH }}" \
            -H "Content-Type: application/json" \
            "https://abdo-said.atlassian.net/rest/api/3/issue/$TICKET_ID/comment" \
            -d "{
              \"body\": {
                \"type\": \"doc\",
                \"version\": 1,
                \"content\": [
                  {
                    \"type\": \"paragraph\",
                    \"content\": [
                      {
                        \"type\": \"text\",
                        \"text\": \"$COMMENT\"
                      }
                    ]
                  }
                ]
              }
            }")

          if [ $? -eq 0 ]; then
            echo "‚úÖ Successfully added comment to ticket"
          else
            echo "‚ö†Ô∏è Failed to add comment"
            echo "$COMMENT_RESPONSE"
          fi

      - name: Add PR Comment
        if: steps.extract.outputs.ticket_id != ''
        uses: actions/github-script@v6
        with:
          script: |
            const ticketId = '${{ steps.extract.outputs.ticket_id }}';
            const jiraUrl = `https://abdo-said.atlassian.net/browse/${ticketId}`;

            const comment = `üîó **Jira Ticket:** [${ticketId}](${jiraUrl})

            This PR is linked to Jira ticket ${ticketId}. Status updates will be synchronized automatically.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });